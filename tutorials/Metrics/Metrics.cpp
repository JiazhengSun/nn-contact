#include "dart/dart.hpp"
#include "dart/gui/gui.hpp"
#include "dart/collision/bullet/bullet.hpp"
#include "dart/collision/ode/ode.hpp"
#include <dart/utils/utils.hpp>
#include <iostream>
#include <fstream>
#include <string>
#include <typeinfo>
#include <math.h>
#include <stdio.h>
#include <cmath>

using namespace dart::dynamics;
using namespace dart::simulation;
using namespace dart;
using namespace utils;
using namespace std;



//const unsigned int testSize = 61884;// 127008

class MyWindow : public dart::gui::SimWindow
{
public:
    
    MyWindow(const WorldPtr& world)
    {
        setWorld(world);
    }
    
    void keyboard(unsigned char key, int x, int y) override
    {
        switch(key)
        {
            default:
                SimWindow::keyboard(key, x, y);
        }
    }
    
    void drawWorld() const override
    {
        // Make sure lighting is turned on and that polygons get filled in
        glEnable(GL_LIGHTING);
        glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);
        
        SimWindow::drawWorld();
    }
    
    void timeStepping() override
    {
        SimWindow::timeStepping();
    }
protected:
};

double distanceError(vector<vector<double>> ground_truth, vector<vector<double>> my_results)
{
    if (ground_truth.size() != my_results.size())
    {
        cout<<"Something wrong with metric1's vec size!!"<<endl;
    }
    
    int N = ground_truth.size(); //N is the number of testing trajectories
    double sum = 0;
    for (int i=0; i<N; i++)
    {
        Eigen::Vector3d x_i (my_results[i][0], my_results[i][1], my_results[i][2]); //final position of trajectory i
        Eigen::Vector3d x_gs(ground_truth[i][0], ground_truth[i][1], ground_truth[i][2]); //final position of corresponding ground truth
        Eigen::Vector3d result = x_i - x_gs; // The real metric
//        Eigen::Vector3d result = x_gs; // For average
        sum += result.norm();
    }
    sum /= N;
    return sum;
}

double orientationError(vector<Eigen::Quaterniond> q_gs_vec, vector<Eigen::Quaterniond> q_i_vec)
{
    if(q_gs_vec.size() != q_i_vec.size())
    {
        cout<<"Something wrong with metric2's vec size!!"<<endl;
    }

    int N = q_gs_vec.size();
    double sum = 0;
    for (int i=0; i<N; i++)
    {
        Eigen::Quaterniond q_gs = q_gs_vec[i];
        Eigen::Quaterniond q_i = q_i_vec[i];
//        Eigen::Quaterniond q_i;
//        q_i.w()=1; q_i.x()=0; q_i.y()=0; q_i.z()=0;
        Eigen::Quaterniond invert_qgs = q_gs.inverse();
        double sc = abs((invert_qgs * q_i).w());
        sum += 2 * acos(sc);
    }
    sum /= N;
    return sum;
}

double impulseError(vector<vector<double>> gs_vec, vector<vector<double>> my_vec)
{
    if(gs_vec.size() != my_vec.size())
    {
        cout<<"There is something wrong with metric3's vec size!!"<<endl;
    }
    int N = gs_vec.size();
    double sum = 0;
    for(int i = 0; i < N; i++)
    {
        Eigen::Vector6d imp_gs;
        imp_gs<<gs_vec[i][0], gs_vec[i][1], gs_vec[i][2], gs_vec[i][3], gs_vec[i][4], gs_vec[i][5];
        
        Eigen::Vector6d imp_i;
        imp_i<<my_vec[i][0], my_vec[i][1], my_vec[i][2], my_vec[i][3], my_vec[i][4], my_vec[i][5];
        
        Eigen::Vector6d result = imp_i - imp_gs;
        
//        Eigen::Vector6d result = imp_gs;
        sum += result.norm();
    }
    sum /= N;
    return sum;
}

int main(int argc, char* argv[])
{

    WorldPtr world = SkelParser::readWorld(DART_DATA_PATH"/NN-contact-force/skel/singleBody_genData.skel");
    assert(world != nullptr);
    world->setGravity(Eigen::Vector3d(0.0, 0.0, 0));

    //Deal with first metric -- distance error
    double totalLinearPositionGS[] =
        {0.273164, 0.110794, 0.8297,
        -0.846792, 0.0593946, -0.0792863,
        -0.795778, 0.0618714, 0.278426,
        -0.264055, 0.0594797, 0.215257,
        0.00654351, 0.0594503, -0.605081,
        -0.406469, 0.0593459, -0.107159,
        -0.00315336, 0.0599079, -0.60074,
        -0.244678, 0.0596475, -0.357398,
        0.757056, 0.0604229, -0.680043,
        0.630873, 0.0599992, -0.339318,
        -0.61114, 0.0603136, -0.108542,
        -1.41293, 0.111781, -0.24793,
        -0.778576, 0.0583329, -0.518473,
        0.258269, 0.0594763, 0.585631,
        -0.337457, 0.0604206, -0.135311,
        -0.781488, 0.0599375, 0.838235,
        -0.722028, 0.0584896, -0.508915,
        0.11148, 0.0599989, -0.244726,
        -0.515872, 0.0582973, 0.511562,
        -0.27771, 0.0603175, -0.335929,
        -0.500073, 0.111655, 0.805991,
        0.18818, 0.147834, -0.0848861,
        -0.0285695, 0.0589476, 0.0832204,
        0.417058, 0.0594198, 0.700585,
        0.599468, 0.0600723, -0.148918,
        -0.586084, 0.0588417, -0.0863773,
        -0.12784, 0.0600275, 0.442598,
        -0.910819, 0.0593251, 0.409541,
        0.362059, 0.0598126, 0.508042,
        -0.154224, 0.0602341, 0.682904,
        -0.278311, 0.0598023, -0.608832,
        -0.160663, 0.0571059, 0.197686,
        -0.459182, 0.0601927, 0.246246,
        0.234884, 0.0617247, -0.661123,
        -0.223185, 0.151404, 0.369461,
        -0.444061, 0.059327, -0.655378,
        -0.25221, 0.110869, -0.143781,
        0.247507, 0.110912, -0.000935023,
        -0.150654, 0.0600304, 0.357135,
        0.00985467, 0.059694, 0.303991,
        -0.428254, 0.0595699, 1.09608,
        -0.108766, 0.05884, 0.26771,
        -0.0615819, 0.0600111, -0.647555,
        -0.0272434, 0.0595237, -0.932635,
        -0.070001, 0.0596, -0.195754,
        0.325324, 0.111644, -0.347249,
        0.12077, 0.0591748, -0.101928,
        -0.307031, 0.0600365, -0.716805,
        -0.061719, 0.110974, 0.418289,
        0.200202, 0.0600619, 0.0683766,
        -0.325197, 0.1101, -0.100651,
        0.158204, 0.0601191, -0.672051,
        -0.5714, 0.0587085, 0.217861,
        0.611539, 0.0593506, 1.09916,
        0.276159, 0.0600375, -0.720084,
        -0.576117, 0.0600297, 0.314661,
        -0.0665229, 0.0618437, 0.148762,
        0.346342, 0.0588147, 0.551252,
        -0.461038, 0.110082, -0.455394,
        -0.415074, 0.0619276, 0.0871222,
        0.546261, 0.0600544, 0.347778,
        -0.233935, 0.0600588, -0.291883,
        0.49534, 0.11103, -0.1248,
        -0.114398, 0.0594511, -0.6047,
        0.842561, 0.0600695, -0.585848,
        0.13123, 0.0617964, 0.707111,
        -0.995482, 0.0596683, 0.765417,
        0.216904, 0.0598981, 0.0487781,
        0.92909, 0.0594388, 0.596944,
        -0.294426, 0.0599993, -0.403719,
        -0.455377, 0.0599322, -0.601137,
        0.460006, 0.0593712, -0.532609,
        -0.00911019, 0.0599439, -0.70286,
        -0.520592, 0.0589221, 0.442473,
        -1.29396, 0.0598356, -1.37317,
        -0.171423, 0.111474, -0.0492838,
        1.29108, 0.151799, 0.301951,
        0.330335, 0.058739, -0.166378,
        -0.47538, 0.11113, 0.0195621,
        0.0899166, 0.0595394, 0.618366,
        -0.0359913, 0.110052, 0.280548,
        -0.500319, 0.0599782, -0.0515458,
        -0.609058, 0.0595363, 0.52523,
        1.09194, 0.0599136, 0.0566738,
        -0.155211, 0.0590514, -0.107762,
        -0.503824, 0.108877, -1.26775,
        -0.615225, 0.0601311, -0.486317,
        -0.740312, 0.11111, 0.542735,
        0.436744, 0.111778, 0.0508797,
        0.641547, 0.0603643, -0.106793,
        0.721178, 0.0598638, -0.562327,
        0.394688, 0.059283, 0.208027,
        -0.596724, 0.0596602, -0.169064,
        -0.296698, 0.0602534, -0.0947121,
        -0.145932, 0.111159, -0.888232,
        -0.659848, 0.0613815, -0.828391,
        -0.443706, 0.0613191, -0.372246,
        0.108859, 0.0602292, -0.232172,
        0.427737, 0.0610489, -0.103472,
        -0.252637, 0.0600782, -0.245887}; // x y z
    
    double totalLinearPositionMy[] =
    {0.264369, 0.110101, 0.83797,
        -0.844841, 0.0586873, -0.0822093,
        -0.765752, 0.0598433, 0.306901,
        -0.264667, 0.0581326, 0.214933,
        0.0660364, 0.109972, -0.690777,
        -0.427841, 0.059928, -0.108832,
        -0.00506489, 0.0597421, -0.598625,
        -0.199765, 0.0591707, -0.384912,
        0.761342, 0.0587616, -0.649958,
        0.643412, 0.0593735, -0.298176,
        -0.603787, 0.0598861, -0.0641489,
        -1.40708, 0.109972, -0.290521,
        -0.873381, 0.109985, -0.544002,
        0.296236, 0.0592642, 0.503373,
        -0.340901, 0.0586773, -0.140157,
        -0.775959, 0.0580877, 0.869934,
        -0.711639, 0.0583533, -0.518701,
        0.00904613, 0.109978, -0.184304,
        -0.5157, 0.0572353, 0.513075,
        -0.283027, 0.0594994, -0.345679,
        -0.704717, 0.0598562, 0.706201,
        0.188997, 0.1469, -0.0858944,
        -0.0331793, 0.0590014, 0.0908096,
        0.427088, 0.0587952, 0.698095,
        0.528453, 0.059178, -0.155011,
        -0.585965, 0.0578201, -0.0861584,
        -0.127221, 0.0599799, 0.381992,
        -0.91273, 0.0597778, 0.390301,
        0.358674, 0.0595545, 0.506814,
        -0.159055, 0.0570146, 0.662066,
        -0.188143, 0.0589147, -0.659704,
        -0.161069, 0.0577198, 0.198609,
        -0.464758, 0.0575458, 0.235593,
        0.253396, 0.0590557, -0.639035,
        -0.229586, 0.149995, 0.356388,
        -0.465047, 0.0584145, -0.669479,
        -0.263964, 0.109992, -0.131225,
        0.237055, 0.109991, -0.00833161,
        -0.142531, 0.0588829, 0.372611,
        0.045389, 0.0594112, 0.253552,
        -0.446821, 0.0577882, 1.01571,
        -0.124928, 0.0591432, 0.277375,
        -0.0594139, 0.0593372, -0.643838,
        -0.0294835, 0.0594297, -0.932655,
        -0.078185, 0.0594557, -0.191119,
        0.322258, 0.109417, -0.350426,
        0.122576, 0.0596429, -0.113439,
        -0.310876, 0.0595592, -0.666158,
        -0.0663786, 0.10999, 0.417393,
        0.196678, 0.0586339, 0.0669936,
        -0.339292, 0.109977, -0.10227,
        0.155304, 0.0594493, -0.665276,
        -0.506135, 0.058254, 0.227563,
        0.937533, 0.0585308, 1.15349,
        0.261372, 0.0597934, -0.724984,
        -0.572665, 0.0595311, 0.322435,
        -0.0685841, 0.0589449, 0.147798,
        0.190748, 0.111793, 0.545666,
        -0.458539, 0.109726, -0.46536,
        -0.415794, 0.0591395, 0.0868092,
        0.550383, 0.0594258, 0.3479,
        -0.231642, 0.0597347, -0.289146,
        0.494886, 0.109982, -0.134248,
        -0.118441, 0.0579158, -0.616755,
        0.695553, 0.109975, -0.572353,
        0.139441, 0.0598764, 0.688978,
        -1.00746, 0.0585416, 0.718917,
        0.177026, 0.0593899, 0.0553872,
        0.912343, 0.0577742, 0.636831,
        -0.306521, 0.0585887, -0.398258,
        -0.45742, 0.0590704, -0.600525,
        0.439494, 0.0569585, -0.599817,
        -0.00777724, 0.0598074, -0.675897,
        -0.518964, 0.058724, 0.441586,
        -1.2951, 0.0595952, -1.37749,
        -0.182636, 0.10997, -0.0522555,
        1.30806, 0.151558, 0.337707,
        0.264426, 0.0585229, -0.145073,
        -0.495224, 0.109485, -0.0139785,
        0.086023, 0.0595802, 0.586895,
        -0.0379583, 0.10964, 0.28101,
        -0.504226, 0.0576585, -0.0749099,
        -0.589466, 0.0592094, 0.563631,
        1.07517, 0.058852, 0.062837,
        -0.153969, 0.058619, -0.124347,
        -0.521769, 0.109968, -1.27836,
        -0.594204, 0.0573096, -0.461035,
        -0.897324, 0.0588221, 0.440095,
        0.438434, 0.109984, 0.0557822,
        0.64267, 0.0597437, -0.106085,
        0.733087, 0.0587186, -0.556531,
        0.412651, 0.0597944, 0.217708,
        -0.59315, 0.05702, -0.163003,
        -0.299023, 0.0587751, -0.0959013,
        -0.124511, 0.109962, -0.917669,
        -0.658557, 0.0593641, -0.828896,
        -0.445155, 0.0589117, -0.375174,
        0.0990535, 0.0594713, -0.231479,
        0.425379, 0.05768, -0.110434,
        -0.264981, 0.0589836, -0.250633}; // x y z

    vector<vector<double>> linearPosGS;
    vector<vector<double>> linearPosMy;
    for (int i=0; i < sizeof(totalLinearPositionGS)/sizeof(double); i+=3)
    {
        double indiGs[] = {totalLinearPositionGS[i], totalLinearPositionGS[i+1], totalLinearPositionGS[i+2]};
        double indiMy[] = {totalLinearPositionMy[i], totalLinearPositionMy[i+1], totalLinearPositionMy[i+2]};

        vector<double> vec_GS (indiGs, indiGs+sizeof(indiGs)/sizeof(double));
        vector<double> vec_my (indiMy, indiMy+sizeof(indiMy)/sizeof(double));

        linearPosGS.push_back(vec_GS);
        linearPosMy.push_back(vec_my);
    }
    double dist_error = distanceError(linearPosGS, linearPosMy);
    cout<<"Distance error of the data set is: "<<dist_error<<endl;
    

    // Deal with Third metric -- impulse error
    double totalImpGS[] =
    {-0.115112, 0.112799, 0.0849666, 1.73543, 0.682108, 1.4456,
        0.0535081, 0.0151746, -0.102753, -2.07097, 0.864156, -0.950827,
        -0.0347544, 0.0558266, -0.0172886, -2.41547, -1.90781, -1.30481,
        -0.0577411, -0.0956294, 0.0309806, -0.591802, 0.64051, 0.874103,
        -0.0928125, 0.00554385, 0.224367, -1.85676, 0.158047, -0.771981,
        0.0374363, -0.00619671, -0.105485, 2.17679, -0.886583, 0.824621,
        0.000884633, -0.00229712, 0.0020019, 1.85338, 1.34657, 0.726146,
        0.0544961, -0.0108648, 0.156523, -0.130597, 1.14197, 0.124738,
        0.000948137, -0.0831762, 0.0791088, -2.42516, 2.31255, -0.619837,
        -0.0618107, -0.184435, 0.183914, 0.742109, 0.689374, 0.940738,
        0.0168849, 0.0705174, -0.0869964, -1.90313, 0.818103, 0.293765,
        0.0269857, -0.016793, -0.0362122, 0.721805, 0.775354, 0.178334,
        0.00132184, -0.0878747, -0.157943, 0.569561, 1.46924, -0.812672,
        -0.0911803, 0.144146, -0.0343477, -0.432093, -0.545603, -1.14268,
        0.00441665, 0.0125148, 0.0341457, -2.28262, -1.44062, 0.823253,
        -0.0308065, -0.0467117, 0.00824908, 2.19336, -1.65363, -1.17276,
        -0.0222511, 0.0448331, 0.0271621, -2.3887, -1.58108, 0.65288,
        -0.0180796, 0.0163825, 0.0751457, -0.920035, 1.17416, -0.477332,
        -0.0259962, -0.054191, 0.0353591, 0.411515, -0.539515, -0.524307,
        0.0310595, -0.0584511, -0.028742, -1.47366, -1.26644, 0.982999,
        0.0748553, -0.0699211, -0.0601754, 2.32086, 2.09661, 0.450872,
        0.0218616, -0.0149224, 0.0272595, -0.913183, -0.48825, 0.465075,
        0.0769374, -0.0302476, -0.137051, 1.83613, 2.25455, 0.533178,
        0.000851587, 0.0759843, 0.138037, -1.60915, 2.11557, -1.15461,
        -0.03171, -0.00812562, 0.0647021, -2.09972, 1.96694, -0.782038,
        0.0179661, 0.0811953, 0.105856, 0.149406, 0.598205, -0.484203,
        0.0261268, 0.0771452, 0.0775684, 0.975132, -1.21432, 0.879246,
        0.0359919, 0.0576128, 0.194797, 1.7256, -0.0421466, -0.306368,
        -0.0814837, 0.134472, -0.0429017, 0.229893, 0.454707, 0.988604,
        -0.012406, -0.220624, -0.116027, -0.311091, 1.39251, -1.37244,
        0.031291, 0.00328028, -0.0715099, -1.66109, 0.744988, -0.692677,
        -0.0964579, -0.078638, -0.106075, -1.54069, 0.416049, 1.09257,
        0.0459757, 0.219566, -0.095071, 0.29848, -0.717076, -1.36039,
        -0.0561161, 0.016332, -0.170403, -2.36273, 0.596586, 0.83526,
        0.00105645, 0.0204028, 0.0466299, -2.27243, -1.35455, 0.771832,
        0.0117265, 0.0608715, 0.0825532, -1.64127, 1.7578, -1.06299,
        0.0236753, 0.00573864, -0.0686325, 1.31898, 1.4223, 0.573916,
        -0.040767, -0.0356028, 0.0378328, -1.0372, 1.00338, -0.173398,
        0.0280032, 0.0554164, 0.030266, -0.712653, 0.715853, -0.651339,
        0.000744794, -0.0181733, 0.0347698, 1.60855, -1.38379, -0.757731,
        -0.0274109, -0.00615445, 0.0796785, -2.38, -1.21522, -0.912628,
        -0.0373992, 0.0901122, 0.072937, 1.37873, 0.529425, 0.0528662,
        0.0610879, -0.0156804, 0.125249, 2.09774, 0.699689, -0.935537,
        -0.0730654, -0.0768755, -0.041785, -1.54779, 0.855587, 1.13237,
        0.00264724, 0.0197552, -0.0290279, -2.02082, 1.26824, 0.67882,
        0.0873708, -0.0580974, -0.114654, -1.93087, -2.15828, -0.377757,
        0.0289157, 0.0487185, 0.0157275, 1.72654, -1.3444, 0.990171,
        0.0291784, 0.0221761, -0.0324739, -1.39997, 0.819894, -0.697997,
        0.0349919, 0.102821, -0.100598, -2.636, 1.25699, 0.367855,
        -0.0494996, -0.114966, 0.0894065, -1.03083, 1.34959, 1.16469,
        -0.0313631, 0.0527544, 0.173876, -0.406901, 1.45572, -0.515063,
        0.0330643, -0.0999946, -0.109017, -1.46235, -1.81753, 1.22359,
        -0.0501796, -0.0670907, -0.00389541, 0.352256, -0.229356, -0.587473,
        0.0411755, -0.00114719, 0.100585, -2.48856, -1.15238, 1.00557,
        0.0240195, 0.131343, 0.181025, 0.131847, 1.11255, -0.824707,
        0.0754689, -0.0384792, -0.119959, -1.25464, -1.70953, -0.240958,
        -0.0127184, 0.00874985, 0.0156789, -1.2101, -0.791637, -0.539827,
        -0.0106525, -0.0292913, -0.0269661, -2.18553, 1.42147, -0.680678,
        0.0247604, -0.0114387, 0.0828207, -0.275777, 0.754079, 0.186596,
        -0.073462, -0.126973, 0.048486, -0.0390051, -0.295244, -0.832269,
        0.0876463, -0.103745, 0.0277791, 0.0513953, -0.149826, -0.721705,
        0.000711373, 0.0171982, -0.0296483, 2.22328, -1.43158, -0.777078,
        0.0448244, 0.0923954, 0.00710562, -2.30367, 1.68858, 0.429656,
        0.0411048, -0.0183716, -0.0687644, -1.89295, -1.85002, -0.637271,
        -0.0154928, 0.0516112, -0.0556619, 0.551987, 0.775563, 0.565484,
        0.0506708, -0.0458544, -0.211035, -2.08703, 0.108563, -0.524697,
        -0.0816126, -0.0121853, -0.227376, 0.64277, 1.9883, -0.337265,
        -0.0244926, -0.0419812, -0.140316, 1.03847, 1.70348, -0.690936,
        -0.0837379, -0.0178433, 0.176836, -0.941487, -0.490983, -0.495367,
        -0.0419678, -0.0150751, 0.132537, -1.3982, -0.143421, -0.459052,
        -0.0663194, 0.0257897, 0.215832, -0.366632, 1.71055, -0.317049,
        0.028161, 0.00423146, -0.0622732, 2.13943, -1.16014, 0.888656,
        0.0885043, 0.112898, -0.0145344, -0.601445, 0.358369, -0.988835,
        0.0383848, -0.101441, -0.0903825, -1.67995, -1.85051, 1.36347,
        -0.0414581, -0.0275027, -0.0530852, -1.78971, 0.96005, 0.900322,
        -0.0680245, -0.0649396, 0.0523194, -1.20725, 1.22823, -0.0451437,
        0.0145272, -0.0147886, -0.00921181, -2.2072, -1.67958, -0.78438,
        -0.00577343, 0.0616254, -0.127799, -2.10609, 0.694974, 0.430265,
        0.0763566, -0.0108581, 0.210726, -0.806469, -0.856985, 0.248067,
        -0.0173168, 0.0448443, -0.0379099, 0.800776, 0.832254, 0.618703,
        -0.0275907, -0.0167356, -0.098754, -1.30812, -1.59796, 0.636274,
        -0.0446019, 0.02101, -0.0729791, -1.32, -1.45543, 0.387724,
        0.0660843, -0.121703, -0.0579031, -0.444386, 0.0601605, -0.633621,
        0.040141, 0.0799432, 0.0470633, -0.948885, 1.01358, -0.912377,
        0.0780008, -0.0265529, -0.146883, 1.31992, 1.93729, 0.350715,
        -0.0139575, 0.0351691, -0.0036616, 1.56903, -1.13532, 0.780488,
        0.0997958, 0.0564546, -0.159379, -1.02147, -0.328818, -0.756069,
        0.0333858, 0.0500936, 0.176289, 1.44333, -0.124294, -0.23802,
        0.0672512, 0.0237425, 0.127068, -1.80233, 2.11671, 0.558387,
        0.0772713, -0.11813, -0.0242175, -0.299991, -0.0573724, -0.677331,
        -0.0374272, -0.0192486, -0.129322, 0.881779, 1.50696, -0.479494,
        -0.00384517, -0.0533187, -0.10516, -1.1237, -1.52164, 0.812601,
        -0.023388, 0.124409, -0.170651, -0.783582, 0.564409, 0.518858,
        -0.0525426, 0.100733, -0.0535721, 1.08846, 1.1556, 1.10535,
        -0.00463906, 0.0410094, -0.0641081, -2.10553, -1.9708, -1.10834,
        -0.0248793, -0.12403, 0.168716, 1.14567, -1.98633, -1.29129,
        0.12848, -0.158085, 0.0313537, -0.602071, -0.651003, -0.815206,
        0.0190537, -0.0085311, 0.032393, -1.91063, -1.19068, 0.810261,
        0.0129737, -0.0508235, -0.0622989, -0.792304, -0.984414, 0.63809,
        0.0343053, 0.0484454, 0.00369018, 1.36943, -1.03515, 0.858883};

    double totalImpMy[] =
    {-0.115112, 0.112793, 0.0849769, 1.73476, 0.68155, 1.4453,
        0.0521057, 0.0150129, -0.10274, -2.07884, 0.83955, -0.931624,
        -0.0338155, 0.056177, -0.0184524, -2.40459, -1.88638, -1.33635,
        -0.0589559, -0.0948429, 0.026489, -0.60054, 0.61699, 0.872502,
        -0.0929246, 0.00462842, 0.223826, -1.84791, 0.137042, -0.770019,
        0.0375026, -0.00648863, -0.105652, 2.17348, -0.889534, 0.826133,
        0.000925453, -0.00231222, 0.00192544, 1.8534, 1.34633, 0.725947,
        0.0539026, -0.0116977, 0.156202, -0.137937, 1.1425, 0.13316,
        -0.0016679, -0.0826521, 0.0774774, -2.41673, 2.29542, -0.612086,
        -0.0615294, -0.184204, 0.183883, 0.724754, 0.694403, 0.938123,
        0.0173865, 0.0703581, -0.0855237, -1.90537, 0.827116, 0.293095,
        0.026683, -0.0161502, -0.0370988, 0.726249, 0.779908, 0.182831,
        0.00146374, -0.087946, -0.157575, 0.571556, 1.46964, -0.814929,
        -0.0916431, 0.142893, -0.0328622, -0.454229, -0.552183, -1.13431,
        0.00443835, 0.0127632, 0.0344951, -2.27971, -1.44182, 0.826795,
        -0.027756, -0.0441727, 0.0115932, 2.20922, -1.69739, -1.17817,
        -0.0263277, 0.0490833, 0.0241668, -2.45026, -1.63575, 0.652883,
        -0.0179587, 0.0164375, 0.0750322, -0.920912, 1.17555, -0.477948,
        -0.0254216, -0.0544863, 0.0363375, 0.420519, -0.550631, -0.53145,
        0.0315412, -0.0586467, -0.028666, -1.47244, -1.2709, 0.979954,
        0.0751108, -0.0696359, -0.0601112, 2.31137, 2.09575, 0.46031,
        0.0208396, -0.0142332, 0.0260048, -0.918858, -0.500464, 0.462431,
        0.0766794, -0.0297964, -0.137072, 1.83281, 2.25787, 0.534482,
        0.000974526, 0.0762852, 0.13742, -1.61703, 2.10195, -1.15538,
        -0.0320195, -0.00811543, 0.0651706, -2.09271, 1.96913, -0.782982,
        0.0161925, 0.0838259, 0.1132, 0.170613, 0.629547, -0.490594,
        0.0254495, 0.0762369, 0.0761438, 0.984376, -1.2295, 0.901996,
        0.035669, 0.057544, 0.19467, 1.72205, -0.0349638, -0.305193,
        -0.0814234, 0.134304, -0.0426648, 0.235172, 0.456892, 0.989426,
        -0.0124699, -0.217713, -0.11477, -0.169159, 1.3855, -1.40424,
        0.0312081, 0.00392947, -0.0708162, -1.66604, 0.749656, -0.692613,
        -0.0969752, -0.0743564, -0.106118, -1.57518, 0.447679, 1.12578,
        0.0457658, 0.218886, -0.098785, 0.239932, -0.671217, -1.36327,
        -0.0561495, 0.0163149, -0.170285, -2.36166, 0.596653, 0.835897,
        -0.00310857, 0.0257623, 0.0487917, -2.23158, -1.31003, 0.703716,
        0.0115576, 0.0608839, 0.0827264, -1.64301, 1.75638, -1.0631,
        0.0229212, 0.0058463, -0.0680213, 1.32669, 1.42638, 0.56965,
        -0.0408805, -0.0356492, 0.0368443, -1.03918, 1.0077, -0.178012,
        0.0325674, 0.0598934, 0.028386, -0.701833, 0.703917, -0.680022,
        0.000260231, -0.0176273, 0.0329673, 1.61295, -1.40261, -0.762694,
        -0.0275355, -0.0060802, 0.0799857, -2.37962, -1.21181, -0.911312,
        -0.0369717, 0.0899976, 0.0725664, 1.38113, 0.529055, 0.0475309,
        0.0612791, -0.0152928, 0.125161, 2.09323, 0.70063, -0.939245,
        -0.0726324, -0.0761991, -0.0418826, -1.55278, 0.859486, 1.12911,
        0.00266496, 0.02003, -0.0300593, -2.01577, 1.27784, 0.672775,
        0.086294, -0.0563573, -0.112413, -1.94276, -2.17411, -0.401389,
        0.0295352, 0.0474986, 0.0132428, 1.72866, -1.35597, 1.00812,
        0.0279679, 0.0201213, -0.0330307, -1.42969, 0.828234, -0.706017,
        0.0350313, 0.10276, -0.100815, -2.63322, 1.25893, 0.368221,
        -0.0485847, -0.114966, 0.0893097, -1.02937, 1.35027, 1.17819,
        -0.0300894, 0.0533467, 0.173026, -0.422573, 1.46339, -0.524673,
        0.0304274, -0.100057, -0.107369, -1.48094, -1.80181, 1.25942,
        -0.0479251, -0.0637819, -0.0028792, 0.363662, -0.247491, -0.570677,
        0.041148, -0.00132302, 0.100445, -2.48719, -1.15431, 1.0037,
        0.0239546, 0.13127, 0.180775, 0.127004, 1.11203, -0.824332,
        0.0754268, -0.0380113, -0.118879, -1.25722, -1.71449, -0.24948,
        -0.0121737, 0.00800066, 0.0157663, -1.21732, -0.787591, -0.540265,
        -0.0106311, -0.0292202, -0.0269927, -2.18452, 1.42203, -0.679005,
        0.0247256, -0.0113564, 0.082634, -0.27824, 0.754936, 0.187006,
        -0.0736555, -0.12666, 0.0480705, -0.0294723, -0.298857, -0.832608,
        0.0867868, -0.103715, 0.0268235, 0.0800819, -0.120097, -0.723464,
        0.000641131, 0.017054, -0.0296629, 2.22282, -1.43231, -0.775433,
        0.0410333, 0.0909475, 0.00756037, -2.33169, 1.71099, 0.465748,
        0.0411331, -0.01853, -0.0688612, -1.89343, -1.84759, -0.633839,
        -0.0153426, 0.050364, -0.0539777, 0.567189, 0.77579, 0.562636,
        0.0509159, -0.0452075, -0.21017, -2.08328, 0.126606, -0.53193,
        -0.0814754, -0.0125895, -0.226769, 0.646917, 1.9862, -0.342697,
        -0.02467, -0.0424815, -0.139558, 1.04023, 1.69322, -0.699302,
        -0.0858529, -0.0215258, 0.175168, -0.91421, -0.497368, -0.509189,
        -0.0413378, -0.0157267, 0.132177, -1.40367, -0.148179, -0.456624,
        -0.0671213, 0.0257969, 0.215098, -0.378249, 1.71137, -0.323279,
        0.0279893, 0.00447036, -0.0617775, 2.1431, -1.15975, 0.887041,
        0.0867212, 0.109652, -0.0311174, -0.641308, 0.317338, -0.980185,
        0.0380472, -0.101741, -0.0914071, -1.68711, -1.84659, 1.35312,
        -0.0406683, -0.0272086, -0.0517883, -1.79277, 0.969443, 0.898499,
        -0.0683907, -0.0650196, 0.0517741, -1.20548, 1.22918, -0.0487303,
        0.0145139, -0.0147607, -0.0092235, -2.20657, -1.67964, -0.784222,
        -0.00570754, 0.0617318, -0.127444, -2.10715, 0.695622, 0.431317,
        0.074994, -0.0126981, 0.210765, -0.751318, -0.854132, 0.215874,
        -0.0175542, 0.0442411, -0.0372231, 0.809188, 0.841558, 0.618615,
        -0.0269682, -0.0162732, -0.0972546, -1.3225, -1.6182, 0.637489,
        -0.0446708, 0.0211743, -0.0728574, -1.32022, -1.45387, 0.386925,
        0.0660866, -0.121699, -0.057899, -0.444302, 0.0601721, -0.633608,
        0.0394874, 0.0797206, 0.0474359, -0.957002, 1.01804, -0.914271,
        0.0775369, -0.0256117, -0.146887, 1.31428, 1.94305, 0.354967,
        -0.00684, 0.0413725, 0.000765783, 1.62831, -1.20914, 0.857392,
        0.102812, 0.0525623, -0.160665, -1.01983, -0.323223, -0.758347,
        0.0332559, 0.0502183, 0.175207, 1.44382, -0.109244, -0.242738,
        0.0653211, 0.0204321, 0.125844, -1.78251, 2.14614, 0.576791,
        0.0768522, -0.117811, -0.0238557, -0.264926, -0.0352405, -0.679434,
        -0.0399137, -0.0174985, -0.131865, 0.877401, 1.52253, -0.467616,
        -0.00362021, -0.0527719, -0.105799, -1.11738, -1.52474, 0.798765,
        -0.0205857, 0.126303, -0.180092, -0.878377, 0.556468, 0.490671,
        -0.0531434, 0.100018, -0.0505076, 1.09495, 1.13968, 1.10477,
        -0.00478231, 0.041261, -0.0636894, -2.10125, -1.96551, -1.11557,
        -0.0239461, -0.124096, 0.167645, 1.15951, -1.96794, -1.29111,
        0.128452, -0.158079, 0.0313196, -0.599594, -0.6485, -0.814019,
        0.0187553, -0.00800523, 0.0322121, -1.9124, -1.18768, 0.81833,
        0.0131245, -0.0504213, -0.0596277, -0.809129, -0.990879, 0.659793,
        0.0333072, 0.0479442, 0.00462972, 1.37906, -1.04217, 0.871};
    vector<vector<double>> ImpGSFinal;
    vector<vector<double>> ImpMyFinal;
    for (int i=0; i < sizeof(totalImpGS)/sizeof(double); i+=6)
    {
        double indiGs[] = {totalImpGS[i], totalImpGS[i+1], totalImpGS[i+2], totalImpGS[i+3], totalImpGS[i+4], totalImpGS[i+5]};
        double indiMy[] = {totalImpMy[i], totalImpMy[i+1], totalImpMy[i+2], totalImpMy[i+3], totalImpMy[i+4], totalImpMy[i+5]};

        vector<double> vec_gs (indiGs, indiGs+sizeof(indiGs)/sizeof(double));
        vector<double> vec_my (indiMy, indiMy+sizeof(indiMy)/sizeof(double));

        ImpGSFinal.push_back(vec_gs);
        ImpMyFinal.push_back(vec_my);
    }
    double imp_error = impulseError(ImpGSFinal, ImpMyFinal);
    cout<<"The impulse error of data sets is: "<<imp_error<<endl;



    // Deal with second metric -- orientation error
    double quatGsTotal[] =
        {0.00110039, -0.162203, -0.00667083, -0.986734,
        0.664576, 0.664801, -0.23899, 0.243441,
        0.63797, 0.62575, 0.321399, -0.313262,
        0.40901, -0.408485, -0.579661, -0.57432,
        0.663553, 0.663741, -0.242056, 0.246077,
        0.429643, -0.422577, -0.564068, -0.564502,
        0.445339, -0.44891, 0.547468, 0.548116,
        0.230201, 0.230537, -0.666734, 0.670318,
        0.492605, -0.490891, -0.509098, -0.507134,
        0.326991, -0.326543, -0.625613, -0.628534,
        0.699563, -0.700967, -0.0978205, -0.0984279,
        0.986155, -0.0154835, -0.165084, -0.00245405,
        0.6014, -0.596529, 0.375901, 0.375726,
        0.529373, 0.526364, 0.471619, -0.469341,
        0.675441, -0.677539, -0.205309, -0.206322,
        0.138738, 0.126857, 0.699906, -0.689051,
        0.680054, 0.670454, 0.211357, -0.208198,
        0.606005, -0.606469, -0.363729, -0.364218,
        0.680117, 0.679699, -0.198571, 0.189786,
        0.704244, 0.699339, 0.0879316, -0.0850476,
        0.00948183, -0.655252, -0.0108929, -0.755273,
        0.71407, 0.0699362, -0.0601611, -0.693969,
        0.415652, 0.423208, -0.56703, 0.571495,
        0.101957, -0.105679, -0.695997, -0.702869,
        0.28744, -0.287811, -0.646152, -0.645779,
        0.686352, 0.715283, 0.0984062, -0.087222,
        0.283696, -0.283767, -0.647601, -0.64777,
        0.150857, -0.150341, -0.689592, -0.692173,
        0.619855, -0.625459, -0.329966, -0.340152,
        0.146364, 0.146675, -0.691018, 0.692501,
        0.50237, -0.501573, -0.498509, -0.497532,
        0.25954, -0.250785, 0.656973, 0.661916,
        0.707702, 0.706453, -0.00643422, 0.00642868,
        0.414112, 0.420707, -0.566237, 0.575232,
        0.486308, -0.512867, 0.519687, -0.479997,
        0.635131, 0.636144, -0.311296, 0.308259,
        0.218147, 0.00160648, 0.975888, -0.00717298,
        0.46524, 0.00361439, -0.885151, 0.00686479,
        0.306777, -0.306692, 0.637211, 0.637017,
        0.621759, 0.620004, 0.338897, -0.337874,
        0.697284, -0.701678, -0.102116, -0.104955,
        0.399894, -0.392956, -0.584171, -0.586868,
        0.181583, 0.181617, 0.683312, -0.683468,
        0.383295, -0.385186, -0.594283, -0.592911,
        0.554067, -0.558283, 0.436966, 0.436337,
        0.0129909, -0.922611, 0.00543438, 0.385475,
        0.67515, 0.669966, -0.219236, 0.217379,
        0.69252, 0.691996, 0.144249, -0.144045,
        0.989432, 0.00842913, 0.144746, -0.00125642,
        0.575881, -0.576215, -0.409957, -0.41021,
        0.961831, 0.000674406, -0.273642, 9.6214e-05,
        0.493589, -0.494264, -0.505714, -0.506286,
        0.414667, 0.4087, 0.578435, -0.571339,
        0.3248, -0.320423, -0.631146, -0.627287,
        0.418638, 0.418491, -0.570021, 0.56981,
        0.652888, -0.653091, -0.271252, -0.271351,
        0.701491, 0.712651, -0.00466455, 0.00418209,
        0.493686, 0.500146, 0.499956, -0.506134,
        0.970148, 0.000842643, -0.242514, 0.000176214,
        0.0256007, 0.0263196, -0.713713, 0.699475,
        0.706154, 0.706578, -0.0323674, 0.0323547,
        0.149618, -0.149688, 0.690857, 0.691321,
        0.395673, -0.00384724, -0.918344, -0.00845393,
        0.25523, -0.253991, -0.661382, -0.657967,
        0.584147, -0.583742, -0.398914, -0.398604,
        0.430616, -0.437786, 0.552894, 0.563224,
        0.367672, 0.366534, 0.605801, -0.602889,
        0.131224, -0.132834, 0.696028, 0.693311,
        0.469933, -0.47243, -0.52535, -0.529131,
        0.67688, 0.676876, -0.20454, 0.204539,
        0.634953, 0.638835, -0.303258, 0.311062,
        0.702264, 0.710997, -0.0286661, 0.0220661,
        0.53328, 0.533669, -0.462783, 0.465448,
        0.633178, -0.639532, 0.306649, 0.309921,
        0.582973, -0.582065, 0.401402, 0.400275,
        0.965953, 0.0121469, -0.258413, 0.00325069,
        0.195398, -0.685792, -0.678948, 0.174754,
        0.370215, -0.376075, -0.602024, -0.599229,
        0.00223009, -0.232145, -0.00933511, -0.972634,
        0.0457701, -0.045039, 0.703456, 0.707832,
        0.000538456, -0.927409, -0.000238873, -0.374049,
        0.661884, -0.656172, -0.260749, -0.251712,
        0.432987, 0.439969, -0.554499, 0.558105,
        0.134325, 0.132399, 0.695216, -0.693616,
        0.583819, 0.586683, -0.398727, 0.394938,
        0.00234699, 0.733076, 0.007441, 0.680101,
        0.180643, 0.180749, -0.684543, 0.682714,
        0.00443558, 0.40424, -0.0099361, 0.914588,
        0.999676, -0.0152488, 0.0203643, 0.000310328,
        0.70066, 0.704566, 0.0787052, -0.0804192,
        0.535875, -0.538574, -0.458726, -0.46081,
        0.220235, 0.225842, 0.670693, -0.671314,
        0.289395, -0.289796, 0.643017, 0.647146,
        0.428046, -0.4289, -0.561875, -0.563133,
        0.0077857, -0.764065, -0.00659879, -0.645059,
        0.218967, -0.212811, -0.679003, -0.667623,
        0.150344, 0.149014, 0.695764, -0.686371,
        0.450866, -0.451815, -0.54373, -0.544922,
        0.708078, -0.703356, 0.0451699, 0.043315,
        0.00329172, -0.0032381, -0.706789, -0.707409};//order in w x y z


    double quatMyTotal[] =
    {0.21688, 0.0857643, -0.545021, -0.805332,
        0.348517, -0.540104, -0.680891, -0.351013,
        0.670223, -0.73045, 0.0803741, 0.10385,
        0.174538, -0.720965, -0.664244, 0.0923359,
        0.337825, 0.918567, -0.0272909, 0.203379,
        0.998368, 0.00803638, 0.00755023, 0.0560277,
        0.352171, 0.0473956, 0.0285253, -0.9343,
        0.44487, -0.806425, 0.23747, 0.308832,
        0.856996, -0.128364, 0.380883, -0.322504,
        0.0967645, -0.863794, -0.112597, -0.481476,
        0.960491, -0.212203, 0.174228, -0.0455098,
        0.852104, -0.222808, 0.280665, -0.381448,
        0.595294, 0.0738488, 0.461402, -0.653666,
        0.246845, -0.227871, 0.915359, -0.221947,
        0.680376, -0.459201, 0.483759, 0.303645,
        0.152096, 0.238795, -0.859658, 0.425244,
        0.257681, 0.64476, 0.653242, -0.301928,
        0.0502525, -0.677687, 0.718073, -0.150286,
        0.748219, -0.213056, 0.600613, 0.184496,
        0.630231, -0.733192, -0.143036, -0.211612,
        0.373102, 0.814151, -0.289261, 0.338054,
        0.191299, 0.611012, -0.259915, -0.72285,
        0.466855, 0.136085, -0.800796, 0.349647,
        0.718018, 0.104517, -0.660909, -0.191639,
        0.69387, 0.467093, -0.379608, 0.395305,
        0.574944, -0.300171, -0.325306, -0.688123,
        0.62407, -0.389624, 0.21366, 0.642712,
        0.023464, -0.113445, -0.48445, -0.867115,
        0.114384, 0.127668, -0.467652, -0.867133,
        0.653506, -0.669322, 0.288279, 0.204531,
        0.317183, 0.287256, -0.708087, 0.561686,
        0.518495, 0.805105, 0.2879, -0.00908724,
        0.236948, 0.272991, -0.633477, 0.684133,
        0.14234, 0.780253, 0.123678, -0.596362,
        0.0355465, -0.462566, -0.452435, -0.761624,
        0.141712, 0.925244, 0.181319, 0.301604,
        0.7196, -0.69379, 0.0288072, 0.00071652,
        0.456081, -0.599963, -0.35504, -0.553156,
        0.938409, -0.264719, -0.181286, 0.128247,
        0.121374, -0.990748, 0.0509855, -0.0329843,
        0.785082, 0.579976, -0.114059, 0.185106,
        0.181132, 0.753196, 0.319979, 0.545436,
        0.9059, 0.388554, -0.00578135, -0.168336,
        0.163735, 0.617288, 0.283549, -0.715365,
        0.804778, 0.554422, 0.12329, -0.172478,
        0.525333, -0.233646, 0.756326, -0.312099,
        0.105201, -0.221874, 0.528223, 0.812826,
        0.419886, 0.183012, -0.0373662, -0.888147,
        0.59786, 0.647948, 0.274749, -0.383719,
        0.211054, -0.20585, -0.390036, 0.872327,
        0.167112, 0.810989, -0.418913, -0.37267,
        0.79077, 0.582917, 0.18185, -0.0426831,
        0.493633, -0.173945, 0.488879, -0.697901,
        0.523226, -0.362558, -0.437083, -0.635409,
        0.332906, -0.05198, 0.152879, -0.929032,
        0.664626, 0.569711, 0.391509, -0.283588,
        0.693107, 0.655505, -0.0291129, 0.298442,
        0.16143, -0.884946, 0.116759, -0.420925,
        0.525581, 0.775539, -0.211051, 0.278858,
        0.18614, -0.356864, 0.580266, 0.708019,
        0.565154, 0.351916, 0.570469, -0.480959,
        0.226683, -0.184099, -0.716423, -0.63361,
        0.535106, -0.586989, 0.348209, 0.497852,
        0.216677, -0.193245, 0.675238, 0.678057,
        0.943554, -0.26723, -0.186473, -0.0593513,
        0.563462, 0.695384, 0.135762, 0.424876,
        0.218451, 0.755159, 0.616261, 0.0472848,
        0.083662, -0.35961, 0.882431, -0.291541,
        0.0651298, 0.0435539, 0.688349, -0.721136,
        0.424209, 0.562198, -0.704634, -0.0864368,
        0.816037, -0.290037, -0.254762, 0.430184,
        0.796882, -0.43386, 0.339047, 0.24858,
        0.318977, 0.0919611, -0.706401, -0.625136,
        0.717579, 0.692036, 0.0540166, -0.0570029,
        0.796495, -0.0669015, -0.599632, 0.0395106,
        0.96823, 0.122836, 0.215019, 0.034772,
        0.836961, 0.462458, -0.0905509, 0.278262,
        0.574139, 0.77215, 0.168297, -0.21407,
        0.197728, -0.746121, 0.320393, -0.54914,
        0.0676091, -0.197427, -0.373759, -0.903746,
        0.0916484, 0.103262, 0.846223, -0.51463,
        0.48457, -0.461749, 0.529746, 0.520911,
        0.41246, 0.533442, -0.7364, 0.0550643,
        0.17334, -0.956784, -0.168343, 0.1618,
        0.387643, 0.12491, 0.249735, -0.8785,
        0.852737, 0.454183, -0.205906, -0.155435,
        0.693559, -0.701352, -0.0001999, -0.164564,
        0.148638, -0.266271, -0.382162, -0.87233,
        0.00226695, 0.160569, 0.337214, -0.927631,
        0.743376, 0.372145, 0.525516, 0.180923,
        0.432335, 0.170292, -0.883892, 0.0531257,
        0.0507837, -0.128648, -0.9327, -0.333078,
        0.619717, -0.672702, 0.288021, 0.283666,
        0.419514, -0.195706, 0.865015, 0.193537,
        0.27668, 0.254053, 0.614192, -0.694027,
        0.536014, -0.822027, 0.0413137, -0.187762,
        0.138501, -0.587282, -0.700451, -0.381163,
        0.274342, 0.379494, 0.880082, -0.078594,
        0.0855615, -0.955978, -0.217297, 0.177673,
        0.125029, 0.530112, 0.55658, 0.627349};//same order
    vector<Eigen::Quaterniond> quatGSFinal;
    vector<Eigen::Quaterniond> quatMyFinal;
    for (int i=0; i < sizeof(quatGsTotal)/sizeof(double); i+=4)
    {
        Eigen::Quaterniond q_gs (quatGsTotal[i], quatGsTotal[i+1], quatGsTotal[i+2], quatGsTotal[i+3]);
        Eigen::Quaterniond q_my (quatMyTotal[i], quatMyTotal[i+1], quatMyTotal[i+2], quatMyTotal[i+3]);
        quatGSFinal.push_back(q_gs);
        quatMyFinal.push_back(q_my);
    }
    double orientation_error = orientationError(quatGSFinal, quatMyFinal);
    cout<<"The orientation error is: "<<orientation_error<<endl;
}
