#include "dart/dart.hpp"
#include "dart/gui/gui.hpp"
#include "dart/collision/bullet/bullet.hpp"
#include "dart/collision/ode/ode.hpp"
#include <dart/utils/utils.hpp>
#include <iostream>
#include <fstream>
#include <string>
#include <typeinfo>
#include <math.h>
#include <stdio.h>
#include <cmath>

using namespace dart::dynamics;
using namespace dart::simulation;
using namespace dart;
using namespace utils;
using namespace std;



//const unsigned int testSize = 61884;// 127008

class MyWindow : public dart::gui::SimWindow
{
public:
    
    MyWindow(const WorldPtr& world)
    {
        setWorld(world);
    }
    
    void keyboard(unsigned char key, int x, int y) override
    {
        switch(key)
        {
            default:
                SimWindow::keyboard(key, x, y);
        }
    }
    
    void drawWorld() const override
    {
        // Make sure lighting is turned on and that polygons get filled in
        glEnable(GL_LIGHTING);
        glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);
        
        SimWindow::drawWorld();
    }
    
    void timeStepping() override
    {
        SimWindow::timeStepping();
    }
protected:
};

double distanceError(vector<vector<double>> ground_truth, vector<vector<double>> my_results)
{
    if (ground_truth.size() != my_results.size())
    {
        cout<<"Something wrong with metric1's vec size!!"<<endl;
    }
    
    int N = ground_truth.size(); //N is the number of testing trajectories
    double sum = 0;
    for (int i=0; i<N; i++)
    {
        Eigen::Vector3d x_i (my_results[i][0], my_results[i][1], my_results[i][2]); //final position of trajectory i
        Eigen::Vector3d x_gs(ground_truth[i][0], ground_truth[i][1], ground_truth[i][2]); //final position of corresponding ground truth
        Eigen::Vector3d result = x_i - x_gs; // The real metric
//        Eigen::Vector3d result = x_gs; // For average
        sum += result.norm();
    }
    sum /= N;
    return sum;
}

double orientationError(vector<Eigen::Quaterniond> q_gs_vec, vector<Eigen::Quaterniond> q_i_vec)
{
    if(q_gs_vec.size() != q_i_vec.size())
    {
        cout<<"Something wrong with metric2's vec size!!"<<endl;
    }
    
    int N = q_gs_vec.size();
    double sum = 0;
    for (int i=0; i<N; i++)
    {
        Eigen::Quaterniond q_gs = q_gs_vec[i];
        Eigen::Quaterniond q_i = q_i_vec[i];
        //        Eigen::Quaterniond q_i;
        //        q_i.w()=1; q_i.x()=0; q_i.y()=0; q_i.z()=0;
        Eigen::Quaterniond invert_qgs = q_gs.inverse();
        double sc = abs((invert_qgs * q_i).w());
        sum += 2 * acos(sc);
    }
    sum /= N;
    return sum;
}

double impulseError(vector<vector<double>> gs_vec, vector<vector<double>> my_vec)
{
    if(gs_vec.size() != my_vec.size())
    {
        cout<<"There is something wrong with metric3's vec size!!"<<endl;
    }
    int N = gs_vec.size();
    double sum = 0;
    for(int i = 0; i < N; i++)
    {
        Eigen::Vector6d imp_gs;
        imp_gs<<gs_vec[i][0], gs_vec[i][1], gs_vec[i][2], gs_vec[i][3], gs_vec[i][4], gs_vec[i][5];
        
        Eigen::Vector6d imp_i;
        imp_i<<my_vec[i][0], my_vec[i][1], my_vec[i][2], my_vec[i][3], my_vec[i][4], my_vec[i][5];
        
        Eigen::Vector6d result = imp_i - imp_gs;
        
//        Eigen::Vector6d result = imp_gs;
        sum += result.norm();
    }
    sum /= N;
    return sum;
}

int main(int argc, char* argv[])
{

    WorldPtr world = SkelParser::readWorld(DART_DATA_PATH"/NN-contact-force/skel/singleBody_genData.skel");
    assert(world != nullptr);
    world->setGravity(Eigen::Vector3d(0.0, 0.0, 0));

    //Deal with first metric -- distance error
    double totalLinearPositionGS[] =
    {0.490599, 0.111077, 1.01943,
        -1.24277, 0.110823, -0.367732,
        -1.21627, 0.0599777, 0.461991,
        -0.361195, 0.110027, 0.29733,
        0.285589, 0.111187, -0.74748,
        -0.620145, 0.059456, -0.22585,
        -0.0402019, 0.151307, -0.471159,
        -0.247036, 0.0591727, -0.501702,
        0.659679, 0.0597605, -1.19176,
        0.766788, 0.0596265, -0.755009,
        -0.465756, 0.0597333, -0.257635,
        -1.15639, 0.0598588, -0.261886,
        -0.852266, 0.0593403, -0.683236,
        0.329044, 0.0595447, 0.721401,
        -0.241605, 0.057134, -0.23087,
        -0.873059, 0.0596963, 1.42685,
        -0.665369, 0.111112, -0.594532,
        -0.0840319, 0.0599753, -0.402279,
        -0.924553, 0.0588209, 0.621702,
        -0.0796923, 0.0599246, -0.249417,
        -0.868334, 0.0588121, 1.11755,
        0.297886, 0.0589171, -0.342391,
        -0.0898581, 0.059427, 0.0773937,
        0.572942, 0.111669, 0.908463,
        0.834431, 0.0598345, -0.116433,
        -0.955242, 0.110883, -0.280822,
        -0.0634118, 0.111045, 0.648179,
        -0.75236, 0.0600118, 0.413247,
        0.334755, 0.0600072, 0.678749,
        -0.229054, 0.0595875, 1.44856,
        0.0646242, 0.0597187, -0.950926,
        -0.407903, 0.0596919, 0.163166,
        -0.840737, 0.0598451, 0.147941,
        0.201493, 0.0590893, -0.720721,
        -0.590569, 0.0599924, 0.578809,
        -0.554754, 0.0588881, -1.00324,
        -0.434887, 0.0599903, -0.102292,
        0.236078, 0.0599922, -0.018238,
        -0.0164352, 0.0605067, 0.225598,
        0.210676, 0.110768, 0.587151,
        -1.15233, 0.156156, 1.674,
        -0.0682194, 0.0603493, -0.0801192,
        0.0259105, 0.0597332, -0.732643,
        -0.381426, 0.059996, -1.3981,
        0.020833, 0.0584312, -0.489782,
        0.471176, 0.0600596, -0.539758,
        0.0474663, 0.0596995, 0.0746039,
        -0.356154, 0.0599757, -0.999861,
        0.487029, 0.0599825, 0.280984,
        0.477542, 0.0594707, 0.190956,
        -0.424055, 0.0608488, -0.13933,
        0.317671, 0.0617772, -0.658568,
        -0.685057, 0.059661, 0.243504,
        0.696801, 0.0539083, 1.05219,
        0.728449, 0.05912, -0.806959,
        -0.663586, 0.0596059, 0.157909,
        -0.047456, 0.0599269, 0.0988557,
        -0.204068, 0.0587082, 0.71487,
        -0.835091, 0.0600288, -0.718784,
        -0.55547, 0.111221, 0.0819143,
        0.983406, 0.0600731, 0.764224,
        -0.331381, 0.0588042, -0.263728,
        0.56562, 0.0599476, 0.0518614,
        -0.15433, 0.0586312, -0.608582,
        1.26422, 0.0594462, -1.45153,
        0.175596, 0.0600502, 0.971023,
        -0.841372, 0.0601839, 0.570533,
        0.309158, 0.0600296, -0.053211,
        0.914704, 0.110863, 1.04525,
        -0.360712, 0.0603026, -0.436478,
        -0.640864, 0.0599588, -1.0354,
        0.254545, 0.0594764, -1.18933,
        -0.0954185, 0.0596946, -0.914206,
        -0.709182, 0.0621054, 0.468473,
        -0.930491, 0.059968, -1.15637,
        -0.0828964, 0.0611367, -0.0251204,
        1.28636, 0.0596135, 0.461626,
        0.435882, 0.0595411, 0.0378679,
        -0.926055, 0.0614663, -0.0305129,
        0.0887737, 0.0588263, 1.13115,
        -0.154937, 0.0600486, 0.36462,
        -0.52447, 0.0593408, -0.22517,
        -0.749431, 0.05965, 0.75978,
        1.24806, 0.0586743, 0.148869,
        -0.0604964, 0.111268, -0.426265,
        -0.789573, 0.108767, -1.20713,
        -0.791739, 0.108311, -0.644619,
        -0.821321, 0.058513, 0.598024,
        0.885201, 0.0600543, -0.110509,
        1.09389, 0.060042, -0.0475484,
        0.769105, 0.0601111, -0.757667,
        0.526234, 0.0599014, 0.0243342,
        -1.28112, 0.0594729, -0.284783,
        -0.446314, 0.11616, -0.0868616,
        -0.0879426, 0.111252, -1.06708,
        -0.627116, 0.0618224, -0.82517,
        -0.786187, 0.0599723, -0.65198,
        0.227927, 0.0594537, -0.29596,
        0.52904, 0.0599862, -0.335379,
        -0.462363, 0.0599863, -0.207617}; // x y z
    
    double totalLinearPositionMy[] =
    {0.532997, 0.10999, 0.990535,
        -1.26607, 0.110043, -0.385632,
        -1.21397, 0.0593408, 0.444812,
        -0.364134, 0.109984, 0.303439,
        0.2844, 0.109191, -0.719815,
        -0.622691, 0.0594354, -0.21158,
        -0.0421805, 0.15046, -0.479456,
        -0.281049, 0.0598825, -0.497426,
        0.844578, 0.150565, -1.36282,
        0.771395, 0.0591961, -0.753382,
        -0.469411, 0.0587187, -0.261611,
        -1.19012, 0.0595175, -0.270054,
        -0.744258, 0.0592391, -0.626945,
        0.32945, 0.0586283, 0.721537,
        -0.24624, 0.058665, -0.232241,
        -0.837425, 0.110177, 1.38866,
        -0.669167, 0.109961, -0.596071,
        -0.0807044, 0.0591536, -0.402415,
        -0.92644, 0.0584442, 0.631288,
        -0.0824983, 0.0596251, -0.245672,
        -0.878928, 0.0587578, 1.08444,
        0.340331, 0.10999, -0.207173,
        -0.0947269, 0.0591185, 0.0757372,
        0.574037, 0.110166, 0.906532,
        0.834428, 0.0589094, -0.105935,
        -0.940937, 0.0582442, -0.431199,
        -0.070676, 0.109984, 0.653473,
        -0.751433, 0.0596722, 0.412181,
        0.348851, 0.0597445, 0.706245,
        -0.212509, 0.0587049, 1.40087,
        -0.190174, 0.0592903, -0.732232,
        -0.401849, 0.0584037, 0.160446,
        -0.845154, 0.0592215, 0.160872,
        0.205224, 0.0589815, -0.728211,
        -0.591664, 0.0594332, 0.577305,
        -0.571229, 0.0586555, -1.02526,
        -0.438184, 0.0586788, -0.093511,
        0.213169, 0.0589122, -0.0203121,
        -0.0475786, 0.0589082, 0.205638,
        0.214235, 0.10996, 0.599903,
        -1.2407, 0.1505, 1.53206,
        -0.0785558, 0.0580586, -0.0793432,
        0.0256661, 0.0595399, -0.736252,
        -0.317548, 0.0586283, -1.34556,
        0.0250907, 0.0598467, -0.483212,
        0.460872, 0.058571, -0.49555,
        0.0417679, 0.0596569, 0.0743269,
        -0.362875, 0.0595767, -1.00344,
        0.484318, 0.0587823, 0.283449,
        0.486328, 0.0589853, 0.218695,
        -0.424126, 0.059912, -0.135238,
        0.304034, 0.0574571, -0.651078,
        -0.632174, 0.0593706, 0.232108,
        0.696723, 0.0529126, 1.05234,
        0.700989, 0.0587563, -0.762756,
        -0.793647, 0.109979, 0.23966,
        -0.0471233, 0.0595037, 0.0974367,
        -0.219972, 0.0583298, 0.70906,
        -0.846903, 0.0590271, -0.722352,
        -0.584311, 0.109984, 0.0928242,
        0.968556, 0.0585683, 0.771843,
        -0.353067, 0.0596068, -0.264936,
        0.561412, 0.054691, 0.0538029,
        -0.157639, 0.0575279, -0.61116,
        1.27523, 0.0580838, -1.43861,
        0.157485, 0.0587074, 0.98728,
        -0.829142, 0.0588956, 0.551346,
        0.305407, 0.0598393, -0.0529873,
        0.944928, 0.11185, 1.05996,
        -0.360257, 0.0586129, -0.435618,
        -0.611432, 0.0599038, -1.01768,
        0.262036, 0.0588155, -1.19505,
        -0.110967, 0.059451, -0.935203,
        -0.766347, 0.0576684, 0.563056,
        -0.933614, 0.0589835, -1.17133,
        -0.0818329, 0.0594052, -0.0223946,
        1.29226, 0.0596865, 0.461124,
        0.433525, 0.0591997, 0.0314485,
        -0.930662, 0.0591957, -0.025869,
        0.0739731, 0.0599504, 1.11199,
        -0.170256, 0.0594262, 0.361262,
        -0.521601, 0.0591593, -0.221969,
        -0.728978, 0.0580937, 0.761249,
        1.26057, 0.05891, 0.139024,
        -0.0523799, 0.109996, -0.424486,
        -0.676922, 0.111154, -1.29835,
        -0.781626, 0.10774, -0.645391,
        -0.823594, 0.0581925, 0.597212,
        0.952832, 0.0591189, -0.100276,
        1.12447, 0.0588796, -0.109115,
        0.74083, 0.0567319, -0.72954,
        0.46438, 0.0584506, -0.0165558,
        -1.24956, 0.0595467, -0.308242,
        -0.635892, 0.0589481, -0.102961,
        -0.104411, 0.10996, -1.06472,
        -0.576616, 0.0566672, -0.760608,
        -0.780081, 0.0591695, -0.662627,
        0.230476, 0.0595452, -0.288033,
        0.656236, 0.109411, -0.32391,
        -0.481129, 0.110997, -0.365984}; // x y z

    vector<vector<double>> linearPosGS;
    vector<vector<double>> linearPosMy;
    for (int i=0; i < sizeof(totalLinearPositionGS)/sizeof(double); i+=3)
    {
        double indiGs[] = {totalLinearPositionGS[i], totalLinearPositionGS[i+1], totalLinearPositionGS[i+2]};
        double indiMy[] = {totalLinearPositionMy[i], totalLinearPositionMy[i+1], totalLinearPositionMy[i+2]};

        vector<double> vec_GS (indiGs, indiGs+sizeof(indiGs)/sizeof(double));
        vector<double> vec_my (indiMy, indiMy+sizeof(indiMy)/sizeof(double));

        linearPosGS.push_back(vec_GS);
        linearPosMy.push_back(vec_my);
    }
    double dist_error = distanceError(linearPosGS, linearPosMy);
    cout<<"Distance error of the data set is: "<<dist_error<<endl;
    

    // Deal with Third metric -- impulse error
    double totalImpGS[] =
    {0.00543323, 0.133873, 0.231429, -1.03347, 2.30157, -1.30711,
        0.0469491, 0.0426631, -0.0390954, -1.76483, 1.03228, -0.992869,
        -0.0427488, 0.0305238, -0.0510867, -2.06906, -1.85562, 0.622652,
        0.0555417, -0.00934943, 0.156108, -1.57942, 2.17546, 0.692231,
        -0.0133874, 0.0670806, 0.295296, 0.573576, -2.40524, -0.240189,
        0.0628425, 0.016909, -0.191418, -1.28588, -2.20543, -0.616974,
        0.0300046, -0.0875881, -0.140185, -4.08578, 0.876875, 2.1764,
        0.0728905, 0.051882, 0.0871622, -1.55403, 1.72505, 0.272762,
        0.00429411, -0.117557, -0.202643, 1.53111, 2.46085, -1.39514,
        -0.0649336, -0.0556473, 0.268704, -3.03653, -0.437004, -0.824294,
        -0.102505, 0.135059, 0.013239, 1.87122, 1.26484, 1.58491,
        -0.0433311, -0.0401021, -0.0345255, 2.21232, -1.39, -1.16204,
        -0.0385627, 0.0795929, -0.0497977, 0.674896, 0.827877, 0.800586,
        -0.119721, -0.131315, -0.0614383, 0.203122, -0.561418, 0.804129,
        -0.0323701, 0.139488, 0.124704, 3.13376, -0.100043, 2.15352,
        -0.0518761, -0.108223, 0.0707747, 1.12438, -1.29638, -1.15819,
        0.0197952, 0.109135, 0.152416, 1.59638, -2.18198, 1.35504,
        -0.0329973, -0.063382, 0.0354572, -2.22978, 1.87242, 1.27199,
        -0.00187576, -0.0338796, -0.0668832, 1.18826, 1.31563, -0.699757,
        0.07839, -0.154674, -0.0877699, 1.21146, 1.47318, -1.51414,
        -0.0802453, -0.00820846, -0.215839, -0.910247, -2.10492, 0.418466,
        -0.0111619, -0.0991031, -0.206071, 2.05373, 2.8606, -1.48695,
        0.0655264, 0.0431967, -0.242997, -2.2522, -3.2715, -1.18889,
        0.0462378, -0.106927, 0.0805897, -3.86996, -2.30038, -0.831796,
        -0.00466778, 0.0110634, 0.00863846, -3.13335, -2.22647, 1.15838,
        0.00417783, -0.0917646, 0.179131, 1.88854, -2.55233, -1.35155,
        0.0156108, 0.077812, 0.10333, 1.28505, -1.62189, 1.02722,
        0.052063, 0.159662, 0.17, 0.935711, 0.463098, -0.7215,
        -0.0621219, -0.00283291, -0.165521, 1.18051, 1.95522, -0.476521,
        -0.0769467, -0.0146167, -0.166144, 3.24402, -1.25666, -1.39186,
        0.00848294, 0.0247025, 0.0656141, -3.02015, -1.79286, 1.06544,
        -0.0141901, -0.0698429, -0.164802, 2.41936, 2.86859, -1.42402,
        0.0722398, 0.116755, -0.0283031, -3.75624, 2.49675, 0.712252,
        0.01679, -0.112015, -0.161117, 2.4734, 2.87396, -1.74034,
        0.0268208, -0.0145535, 0.0404411, -3.04729, -1.96717, 1.31306,
        -0.0105632, -0.0260338, -0.0741896, -1.60688, -1.67193, 0.815487,
        -0.0333073, 0.0290162, -0.0301975, 2.44484, 1.9836, -0.790606,
        -0.00465942, 0.0349887, 0.0783563, -0.605358, 0.96437, -0.466621,
        0.00336643, 0.0331653, -0.0701097, 2.46109, 2.26561, 1.18992,
        0.00584165, 0.00374909, 0.00792324, 2.28698, -1.70192, -0.880834,
        0.0366011, 0.0397205, -0.0186669, 2.01323, -1.35227, 1.07001,
        -0.0304094, 0.0686386, 0.0500685, 1.96582, 1.10827, -0.325363,
        0.0339702, -0.0181438, -0.0530449, 1.94777, 1.77502, 0.640222,
        -0.0283469, 0.0437306, 0.15173, -2.06852, 2.52829, -1.11514,
        -0.0134822, 0.09283, -0.136621, 0.678355, 1.40802, 0.889766,
        0.0817086, 0.1064, -0.012388, -1.58124, 1.06299, -1.29955,
        -0.00469517, -0.0403086, 0.064786, 2.54909, -2.28178, -1.23494,
        0.0905476, -0.150871, -0.0643608, 1.29935, 1.41644, -1.49231,
        -0.0565836, 0.0785547, -0.0054059, 2.94851, 2.24226, 1.72091,
        -0.037169, -0.0736972, 0.0430739, -1.59845, 1.46897, 1.134,
        0.00943383, 0.0323348, 0.0363401, -1.15539, 1.0949, -0.674283,
        0.0408637, -0.0400737, -0.0264334, -3.49065, -2.80984, -1.13644,
        -0.0353994, 0.101933, -0.162242, -0.374478, -1.35612, -0.990282,
        0.0442698, -0.0724919, -0.0235602, -0.797773, -0.740342, 0.778917,
        -0.0231682, -0.0340176, -0.00470998, -2.38606, 1.72622, -0.730594,
        0.0828049, 0.0285022, -0.157331, -2.7164, 0.949234, -1.2577,
        -0.00750954, 0.0359785, -0.048297, -0.538049, -0.713327, -0.447729,
        -0.0121577, -0.0332894, -0.032503, -3.37037, 2.27834, -1.07278,
        0.00698654, 0.00739123, -0.0309623, 3.03683, 2.37889, 1.25313,
        -0.0789575, -0.0311168, 0.144997, 0.557977, -1.36802, 0.010262,
        0.0811433, -0.070194, 0.0741062, 2.22735, 1.13969, -1.35935,
        0.0260621, 0.0127003, 0.0425654, 3.12736, -2.51188, -1.16536,
        0.074087, 0.15315, 0.103472, 1.46992, -1.75872, 1.55063,
        0.0864951, -0.147812, -0.0563842, 1.88998, 1.74678, -1.67994,
        -0.0736958, -0.0240767, 0.140957, -1.26459, 1.85841, -0.343724,
        -0.0799915, -0.013957, -0.224566, 1.63909, 2.7057, -0.752014,
        -0.036661, 0.18606, -0.288402, -0.831567, -2.55734, -1.54414,
        -0.0399512, 0.0204089, -0.138308, 1.99414, -0.541267, -0.655889,
        -0.0879654, -0.0148403, 0.195131, 0.563698, -1.72339, 0.123047,
        -0.0467322, 0.00951369, 0.0999373, -1.6238, -0.520594, -0.709756,
        -0.0694689, 0.0236972, 0.217092, 2.40666, -3.20767, 1.12027,
        0.00112822, -0.0646949, -0.125437, 3.47174, -1.72649, 0.921674,
        0.0735968, 0.117868, 0.0313116, -0.690882, 0.713791, -1.06307,
        -0.0121402, 0.143564, -0.236532, 0.781133, 2.13502, 1.25576,
        0.0481557, -0.107959, -0.0781613, -0.592403, -0.953207, 0.951623,
        -0.0725973, -0.140267, 0.076554, 0.986278, -1.23162, -1.32134,
        -0.0293022, -0.0316902, -0.0141665, -3.23314, 2.32719, 1.48159,
        -0.0761631, 0.13469, -0.0632499, 1.46068, 1.50328, 1.44233,
        0.0895991, 0.0205824, 0.187128, 1.235, -2.16725, -0.352957,
        -0.0749939, -0.0266311, 0.141364, -8.41446e-05, 0.943773, 0.17775,
        0.00722671, -0.0334891, -0.0428494, -2.86806, -2.33356, 1.34009,
        -0.060106, -0.0916983, 0.0164724, -1.11966, 0.921021, 1.04159,
        0.046577, 0.0105186, 0.0986248, -3.10491, 2.91963, 1.15496,
        -0.0549198, -0.118333, 0.080939, 2.39144, -2.2627, -1.68541,
        0.0342053, -0.0122615, -0.108954, 3.03003, -1.47535, 1.11728,
        -0.0376051, 0.0432409, -0.0147974, 2.10691, 1.64271, -0.554063,
        0.0963492, 0.0213257, -0.278355, -0.232023, 1.70188, 0.0500741,
        0.0540073, -0.0534666, 0.0392581, 1.29009, 0.67618, -0.853869,
        0.0625123, -0.042223, 0.0792752, -3.48354, -2.02646, 1.66762,
        0.0646482, -0.133645, -0.0794683, 1.11976, 1.33395, -1.33243,
        -0.0351776, -0.106708, -0.0420601, 2.52295, 1.30331, -1.69423,
        0.0237475, -0.050639, 0.0343779, -1.67955, -1.01434, -0.333939,
        0.0962752, 0.10098, -0.0557675, 2.52511, -1.47821, 1.68263,
        -0.0309778, 0.0690228, -0.0508845, 1.8486, 1.69455, 1.17319,
        0.0167409, 0.0946481, 0.133015, 2.95469, -2.98961, 1.75542,
        0.0448416, 0.041642, 0.196573, 1.58358, -0.152518, -0.328933,
        0.109907, -0.156283, -0.0111859, 1.79039, 1.3852, -1.76183,
        0.0260736, -0.0516803, -0.0295588, -1.99232, -1.65408, 1.13455,
        0.0656353, -0.000246868, 0.169394, 1.61342, -2.29655, -0.628499,
        0.0382397, -0.0129858, -0.121627, 2.49692, -1.0416, 0.896246};

    double totalImpMy[] =
    {0.00543848, 0.133871, 0.231413, -1.03285, 2.30101, -1.30685,
        0.0468516, 0.0421129, -0.0399221, -1.76703, 1.02967, -0.987563,
        -0.0426799, 0.0305641, -0.0506657, -2.07031, -1.856, 0.624364,
        0.0556562, -0.00925962, 0.156117, -1.5501, 2.17752, 0.681772,
        -0.0140397, 0.0687995, 0.293585, 0.601548, -2.39837, -0.256109,
        0.0630692, 0.0167613, -0.188402, -1.308, -2.21522, -0.634943,
        0.0296373, -0.0866418, -0.139679, -4.07002, 0.874531, 2.20562,
        0.0725794, 0.0512679, 0.0874573, -1.55424, 1.72282, 0.279909,
        0.0060363, -0.116854, -0.199142, 1.5659, 2.47594, -1.40539,
        -0.0652214, -0.0570279, 0.267605, -3.04047, -0.445646, -0.836001,
        -0.10043, 0.131515, 0.00996305, 1.89142, 1.32062, 1.63334,
        -0.0433291, -0.0391514, -0.0365451, 2.21807, -1.38295, -1.14824,
        -0.0381722, 0.0795771, -0.050461, 0.685035, 0.838766, 0.804528,
        -0.120115, -0.129754, -0.0624047, 0.156921, -0.531107, 0.80226,
        -0.0332505, 0.141762, 0.119509, 3.0722, -0.171242, 2.14278,
        -0.0495712, -0.105236, 0.0690051, 1.18418, -1.32844, -1.17525,
        0.0203062, 0.10968, 0.150314, 1.58687, -2.1658, 1.36595,
        -0.0302395, -0.0613156, 0.0368134, -2.24653, 1.89288, 1.30738,
        -0.00313936, -0.0326925, -0.0677846, 1.19622, 1.32913, -0.696439,
        0.0800769, -0.153738, -0.0816609, 1.24172, 1.455, -1.52161,
        -0.0801311, -0.00835115, -0.215638, -0.911711, -2.10618, 0.420359,
        -0.00927849, -0.0986804, -0.20411, 2.06783, 2.87715, -1.485,
        0.0655216, 0.0431954, -0.242996, -2.25223, -3.2716, -1.18886,
        0.0462085, -0.106961, 0.0805736, -3.8681, -2.29945, -0.834167,
        -0.00536506, 0.0128391, 0.0101257, -3.13704, -2.23299, 1.16922,
        0.00414, -0.0901082, 0.175548, 1.91355, -2.57359, -1.36614,
        0.0158273, 0.0770547, 0.101699, 1.29758, -1.62955, 1.03273,
        0.0497753, 0.162098, 0.172742, 0.934578, 0.466256, -0.706824,
        -0.0632656, -0.00256887, -0.162874, 1.2062, 1.97037, -0.499605,
        -0.0767231, -0.0148445, -0.164593, 3.23464, -1.27479, -1.39282,
        0.00897864, 0.0230814, 0.0647624, -3.03357, -1.79287, 1.05955,
        -0.0148104, -0.0694456, -0.164343, 2.422, 2.87175, -1.43177,
        0.0718781, 0.115504, -0.032063, -3.74394, 2.5318, 0.727546,
        0.0173255, -0.111237, -0.16062, 2.47234, 2.88385, -1.73052,
        0.0263672, -0.0141487, 0.0399786, -3.04816, -1.96879, 1.31359,
        -0.0103097, -0.0252525, -0.0720705, -1.64851, -1.68938, 0.827754,
        -0.0327157, 0.028562, -0.0294256, 2.44736, 1.9909, -0.78853,
        -0.007017, 0.0352204, 0.0821133, -0.589234, 0.979527, -0.470496,
        0.00419688, 0.0326844, -0.0704136, 2.45496, 2.26973, 1.19988,
        0.00567062, 0.0037202, 0.00735617, 2.27072, -1.71423, -0.883486,
        0.0365851, 0.0397411, -0.018604, 2.01335, -1.35243, 1.07028,
        -0.0304395, 0.0687888, 0.0500142, 1.96479, 1.10741, -0.327322,
        0.0356187, -0.01946, -0.05337, 1.95613, 1.7903, 0.652719,
        -0.028683, 0.0427147, 0.150018, -2.08237, 2.52719, -1.11771,
        -0.0134148, 0.092785, -0.136569, 0.679114, 1.40848, 0.890212,
        0.0811823, 0.103741, -0.0127637, -1.60208, 1.08977, -1.33244,
        -0.00208933, -0.0379957, 0.0644354, 2.55349, -2.30213, -1.2747,
        0.0859933, -0.153038, -0.0655859, 1.32115, 1.40608, -1.54871,
        -0.0556186, 0.0800735, -0.00775481, 2.97454, 2.23303, 1.72364,
        -0.0368228, -0.0741901, 0.0439582, -1.60121, 1.46728, 1.13508,
        0.00777488, 0.0305839, 0.0366333, -1.19364, 1.11956, -0.68135,
        0.0412222, -0.0405045, -0.0287972, -3.51486, -2.76954, -1.13591,
        -0.036575, 0.0923247, -0.164229, -0.332615, -1.34043, -0.969196,
        0.0439503, -0.0720498, -0.0222155, -0.79179, -0.72875, 0.797048,
        -0.0254062, -0.0346505, -1.03719e-05, -2.41376, 1.77002, -0.734501,
        0.0825087, 0.0276464, -0.155587, -2.72291, 0.959554, -1.27347,
        -0.00704708, 0.03531, -0.0471173, -0.559735, -0.724588, -0.459294,
        -0.0132045, -0.0343185, -0.0299058, -3.36615, 2.26914, -1.11767,
        0.00647155, 0.00752542, -0.0299755, 3.00639, 2.40453, 1.25273,
        -0.0798999, -0.0310105, 0.142897, 0.582398, -1.37974, 0.0262224,
        0.0810082, -0.0701299, 0.0739492, 2.22768, 1.14064, -1.3586,
        0.0248832, 0.0128639, 0.0386242, 3.12438, -2.54871, -1.16399,
        0.0719469, 0.149693, 0.0945697, 1.58443, -1.79238, 1.63172,
        0.0835796, -0.144831, -0.0565744, 1.92036, 1.78543, -1.73368,
        -0.0729277, -0.0229824, 0.140185, -1.26966, 1.86565, -0.354647,
        -0.0780909, -0.0150265, -0.222776, 1.66583, 2.70678, -0.766511,
        -0.0275159, 0.189114, -0.27792, -0.95408, -2.55246, -1.6424,
        -0.0389905, 0.0194479, -0.133131, 2.01393, -0.58934, -0.675917,
        -0.0870235, -0.0134662, 0.192871, 0.593834, -1.72128, 0.147759,
        -0.0466357, 0.00899648, 0.100096, -1.62419, -0.52377, -0.709654,
        -0.0686277, 0.0239826, 0.215537, 2.41775, -3.20993, 1.12698,
        0.000667879, -0.0651375, -0.121088, 3.47279, -1.73946, 0.954865,
        0.0738824, 0.116593, 0.0290469, -0.715078, 0.718037, -1.06331,
        -0.0098199, 0.141225, -0.234363, 0.830123, 2.17118, 1.27355,
        0.0475951, -0.106768, -0.076753, -0.628303, -0.972442, 0.963106,
        -0.0722951, -0.140027, 0.0759784, 0.991301, -1.23348, -1.33003,
        -0.0276098, -0.0291714, -0.0155434, -3.25626, 2.2843, 1.49698,
        -0.0718278, 0.133652, -0.065459, 1.51082, 1.54433, 1.49534,
        0.089329, 0.0201323, 0.186413, 1.244, -2.15502, -0.363385,
        -0.0747148, -0.0255346, 0.139974, -0.0333082, 0.957583, 0.156907,
        0.00670622, -0.0314807, -0.0409492, -2.84985, -2.36288, 1.34981,
        -0.0601523, -0.0895816, 0.0138521, -1.15142, 0.936719, 1.05778,
        0.0521541, 0.0147354, 0.10337, -3.10842, 2.96864, 1.14513,
        -0.0523722, -0.115374, 0.0805892, 2.40185, -2.29862, -1.7299,
        0.0346978, -0.0129338, -0.110457, 3.02424, -1.4814, 1.12347,
        -0.0375232, 0.0432758, -0.0144689, 2.10751, 1.64196, -0.554497,
        0.095708, 0.0207907, -0.277386, -0.197531, 1.70439, 0.059592,
        0.0536138, -0.0526746, 0.0374644, 1.27993, 0.688853, -0.863136,
        0.0625633, -0.0422742, 0.0789056, -3.47921, -2.02539, 1.67351,
        0.065047, -0.131186, -0.0778894, 1.14718, 1.36052, -1.33344,
        -0.033087, -0.108809, -0.0487525, 2.4857, 1.42002, -1.69416,
        0.0242653, -0.050882, 0.0326205, -1.6868, -1.01952, -0.335508,
        0.0962397, 0.100786, -0.0558256, 2.52481, -1.47936, 1.68183,
        -0.0305024, 0.0686633, -0.0496267, 1.84408, 1.68317, 1.19539,
        0.0160668, 0.0927787, 0.129927, 2.94033, -3.02242, 1.79465,
        0.045497, 0.0375201, 0.182529, 1.56858, -0.0665717, -0.377297,
        0.10998, -0.155963, -0.0109835, 1.79144, 1.38695, -1.75633,
        0.0263326, -0.0499344, -0.0257149, -2.03878, -1.66654, 1.14841,
        0.0667142, 0.000183922, 0.166448, 1.63327, -2.30739, -0.652084,
        0.0377162, -0.0132611, -0.118602, 2.51511, -1.05373, 0.917636};
    vector<vector<double>> ImpGSFinal;
    vector<vector<double>> ImpMyFinal;
    for (int i=0; i < sizeof(totalImpGS)/sizeof(double); i+=6)
    {
        double indiGs[] = {totalImpGS[i], totalImpGS[i+1], totalImpGS[i+2], totalImpGS[i+3], totalImpGS[i+4], totalImpGS[i+5]};
        double indiMy[] = {totalImpMy[i], totalImpMy[i+1], totalImpMy[i+2], totalImpMy[i+3], totalImpMy[i+4], totalImpMy[i+5]};

        vector<double> vec_gs (indiGs, indiGs+sizeof(indiGs)/sizeof(double));
        vector<double> vec_my (indiMy, indiMy+sizeof(indiMy)/sizeof(double));

        ImpGSFinal.push_back(vec_gs);
        ImpMyFinal.push_back(vec_my);
    }
    double imp_error = impulseError(ImpGSFinal, ImpMyFinal);
    cout<<"The impulse error of data sets is: "<<imp_error<<endl;



    // Deal with second metric -- orientation error
    double quatGsTotal[] =
    {0.958027, 0.00885749, 0.286528, -0.00264987,
        0.00299915, -0.354867, 0.00802596, 0.934878,
        0.306181, 0.305498, 0.637769, -0.637318,
        0.215539, -4.80411e-05, 0.976495, 0.000219865,
        0.00869616, 0.857683, 0.00523951, -0.514079,
        0.591153, -0.582815, -0.395475, -0.393019,
        0.275789, 0.644803, -0.651247, -0.28991,
        0.558431, -0.565393, -0.428876, -0.429595,
        0.595809, 0.597581, 0.378323, -0.3805,
        0.559437, 0.557984, -0.433021, 0.433793,
        0.665183, -0.684517, 0.214627, 0.207133,
        0.577872, -0.577655, -0.407762, -0.407564,
        0.52163, -0.524805, 0.474229, 0.477062,
        0.152775, -0.15156, 0.68703, 0.694031,
        0.659583, -0.657728, -0.25413, -0.260313,
        0.471604, 0.471625, -0.532477, 0.521179,
        0.00948584, 0.961055, 0.00271732, -0.276182,
        0.697814, -0.695971, -0.119279, -0.120219,
        0.548806, -0.555188, 0.43908, 0.444733,
        0.702573, 0.703858, -0.0733025, 0.0748439,
        0.253475, -0.257335, 0.655615, 0.663097,
        0.695883, -0.704297, 0.0983965, 0.100156,
        0.617215, -0.612874, -0.349877, -0.347875,
        0.007291, 0.497564, 0.0126547, -0.867305,
        0.238019, -0.229527, 0.670244, 0.664408,
        0.000482599, 0.0662051, 0.00798704, -0.997774,
        0.00619204, 0.685661, -0.00653396, 0.727866,
        0.706724, 0.706725, -0.0232758, 0.0232189,
        0.477519, 0.477592, -0.521434, 0.521525,
        0.20053, -0.201297, -0.676688, -0.679235,
        0.671777, -0.673867, -0.21688, -0.218134,
        0.172554, 0.186845, -0.677348, 0.6903,
        0.299442, 0.301867, -0.639677, 0.640331,
        0.181862, 0.179225, 0.680879, -0.686446,
        0.690378, -0.692831, 0.145867, 0.148616,
        0.668579, 0.660271, 0.243792, -0.240021,
        0.452653, -0.453284, 0.537944, 0.547956,
        0.358946, 0.358236, -0.605941, 0.612911,
        0.524347, -0.52689, 0.471835, 0.47415,
        0.00642672, -0.989875, -0.000921123, -0.141792,
        0.0671478, -0.721432, -0.686988, 0.0554517,
        0.399942, 0.398268, 0.583296, -0.584119,
        0.265403, -0.264647, -0.655976, -0.655148,
        0.350364, 0.350364, 0.614201, -0.614204,
        0.615503, -0.630278, 0.332657, 0.336519,
        0.70652, 0.705888, -0.0357831, 0.0356634,
        0.538768, 0.53691, -0.460607, 0.457491,
        0.625523, 0.613574, 0.340017, -0.341521,
        0.706479, 0.706293, -0.0318843, 0.0319462,
        0.0998481, -0.0952063, 0.701431, 0.699257,
        0.534776, 0.527815, 0.465275, -0.467917,
        0.38687, 0.380638, 0.598715, -0.589056,
        0.486558, 0.484959, 0.515054, -0.512635,
        0.0373188, -0.0044926, 0.709483, 0.703719,
        0.0114261, -0.00701839, 0.706856, 0.707231,
        0.636558, 0.63609, -0.309121, 0.307616,
        0.69678, 0.69795, 0.116576, -0.11736,
        0.668054, -0.666243, 0.230902, 0.237716,
        0.0677686, 0.0676951, -0.704016, 0.703694,
        0.00250741, 0.24072, 0.0100986, -0.970539,
        0.650915, -0.651418, 0.275556, 0.275741,
        0.343639, -0.339591, -0.622528, -0.615669,
        0.370527, -0.371152, -0.605456, -0.598648,
        0.0800705, 0.0904175, -0.693488, 0.710273,
        0.696857, -0.701789, -0.103621, -0.105575,
        0.0799817, -0.0799441, -0.702279, -0.702863,
        0.706422, 0.707639, -0.0103377, 0.0103796,
        0.284425, 0.284342, 0.647489, -0.64731,
        0.464879, 0.00376586, -0.885338, 0.00701578,
        0.708091, 0.706109, -0.00298025, 0.00294939,
        0.487751, 0.487718, 0.511617, -0.512326,
        0.464927, 0.464338, 0.529033, -0.536989,
        0.406584, 0.407727, -0.577322, 0.57892,
        0.161443, -0.153767, 0.696691, 0.681846,
        0.64681, -0.645387, -0.288462, -0.286183,
        0.706903, 0.70298, -0.0513632, 0.0588977,
        0.134476, -0.132363, -0.693356, -0.695452,
        0.59366, -0.598475, -0.371892, -0.388706,
        0.621189, -0.630059, -0.327331, -0.331669,
        0.0237966, 0.0235916, 0.711075, -0.702318,
        0.571604, -0.577376, -0.412462, -0.412045,
        0.696807, -0.703407, -0.0995706, -0.0988164,
        0.602322, -0.605231, -0.365701, -0.37036,
        0.60548, 0.598852, -0.372624, 0.368676,
        0.00948942, 0.878137, 0.00516149, -0.478287,
        0.00306503, 0.90706, 0.00509338, 0.42096,
        0.0485057, -0.0076305, 0.998774, -0.00630619,
        0.696706, 0.716984, 0.019867, -0.0118156,
        0.313024, 0.312804, -0.634287, 0.633917,
        0.593357, 0.593081, 0.384961, -0.384691,
        0.681241, 0.681933, -0.188155, 0.188347,
        0.00674552, 0.0122483, 0.703667, -0.710393,
        0.50899, 0.511923, -0.486568, 0.492053,
        0.620397, -0.0375562, -0.781933, -0.0477365,
        0.0106147, 0.983106, -0.00201398, 0.182716,
        0.707781, 0.695925, -0.0852078, 0.0864476,
        0.246319, 0.244908, -0.660523, 0.665625,
        0.266791, -0.26661, -0.658405, -0.651341,
        0.630376, 0.630417, 0.320325, -0.320301,
        0.0419953, -0.0419994, -0.705831, -0.705886};//order in w x y z


    double quatMyTotal[] =
    {0.991687, 0.000176628, 0.128677, -6.86651e-05,
        0.000414415, 0.430302, 0.00100714, -0.902684,
        0.28903, 0.289165, 0.65084, -0.639728,
        0.202744, -3.97634e-05, 0.979232, -0.000118901,
        4.5693e-05, 0.838053, 0.000460791, -0.545588,
        0.607803, -0.604674, -0.365267, -0.362663,
        0.312116, 0.637711, -0.634224, -0.306052,
        0.581293, -0.584005, -0.396717, -0.40454,
        0.620175, 0.34607, -0.339809, -0.616562,
        0.589636, 0.578927, -0.396677, 0.399774,
        0.67527, -0.680855, 0.201537, 0.199575,
        0.585799, -0.596265, -0.387871, -0.388412,
        0.324974, -0.325432, 0.627079, 0.628695,
        0.151703, -0.151958, 0.685381, 0.695807,
        0.655276, -0.658352, -0.264135, -0.259652,
        0.498481, -0.00111065, -0.866898, -0.00189274,
        7.5642e-05, 0.96083, -2.36401e-06, -0.27714,
        0.699182, -0.697321, -0.112179, -0.110923,
        0.534996, -0.528053, 0.468772, 0.463888,
        0.702139, 0.704974, -0.0722018, 0.0692786,
        0.283792, -0.280683, 0.652002, 0.644649,
        0.998969, 4.99436e-05, 0.0454048, 1.72436e-05,
        0.626336, -0.625743, -0.330764, -0.326718,
        0.00102417, -0.484884, 0.00257127, 0.874574,
        0.240557, -0.240716, 0.665693, 0.66411,
        0.0143666, -0.0136768, 0.708189, 0.705744,
        6.94897e-05, 0.689732, -6.82819e-05, 0.724065,
        0.691749, 0.720663, -0.0193886, 0.041869,
        0.457413, 0.456649, -0.538792, 0.540322,
        0.250023, -0.25617, -0.659919, -0.660585,
        0.641265, 0.643775, -0.293336, 0.297131,
        0.184838, 0.189291, -0.6774, 0.686392,
        0.291199, 0.295748, -0.641112, 0.645532,
        0.142704, 0.141787, 0.690805, -0.694493,
        0.694962, -0.69077, 0.144086, 0.138216,
        0.662847, 0.658832, 0.253479, -0.249644,
        0.451826, -0.454256, 0.539646, 0.546156,
        0.349849, 0.343233, -0.616828, 0.615889,
        0.484355, -0.487188, 0.515388, 0.512272,
        0.000108322, 0.988444, -5.04576e-05, 0.151585,
        0.0224491, -0.70507, -0.708432, 0.0222786,
        0.40278, 0.395375, 0.582444, -0.584983,
        0.262172, -0.257962, -0.657949, -0.657134,
        0.264145, 0.264495, 0.656434, -0.655259,
        0.630587, -0.636479, 0.308903, 0.319115,
        0.713335, 0.690705, -0.0800241, 0.0876106,
        0.535507, 0.536442, -0.46147, 0.460986,
        0.625316, 0.607091, 0.345783, -0.347642,
        0.708084, 0.705366, -0.0248797, 0.021383,
        0.123667, -0.123083, 0.693578, 0.698933,
        0.530074, 0.529035, 0.468794, -0.468376,
        0.390622, 0.389058, 0.586513, -0.593338,
        0.577826, 0.574154, 0.409746, -0.410575,
        0.036712, -0.00459811, 0.70919, 0.704046,
        0.125036, -0.116491, 0.69755, 0.695858,
        0.000201446, -0.868741, -0.000230262, -0.495266,
        0.695323, 0.699633, 0.115063, -0.117478,
        0.672815, -0.671098, 0.219445, 0.22089,
        0.0823583, 0.0829514, -0.699066, 0.705438,
        0.000157556, -0.276592, 0.000130732, 0.960987,
        0.654496, -0.644464, 0.282844, 0.276224,
        0.369803, -0.371991, -0.607741, -0.596255,
        0.363268, -0.376013, -0.595744, -0.609704,
        0.0797517, 0.0849144, -0.698145, 0.706415,
        0.694262, -0.700387, -0.117751, -0.11659,
        0.0556048, -0.0547582, -0.70323, -0.706666,
        0.711759, 0.702405, 0.00447163, -0.00266682,
        0.283836, 0.282181, 0.643207, -0.65276,
        0.447825, -0.0096193, -0.893802, -0.0218587,
        0.715454, 0.698602, -0.000390597, 0.00898561,
        0.421598, 0.420653, 0.568323, -0.567729,
        0.459932, 0.464248, 0.532956, -0.537488,
        0.385815, 0.38799, -0.591418, 0.592313,
        0.14366, -0.146353, 0.687203, 0.696918,
        0.63262, -0.626655, -0.325951, -0.317571,
        0.707042, 0.70509, -0.0386733, 0.0379978,
        0.139247, -0.137837, -0.691055, -0.69574,
        0.593601, -0.597944, -0.37396, -0.387628,
        0.624282, -0.623984, -0.333102, -0.3316,
        0.0617867, 0.0551647, 0.708393, -0.700942,
        0.562948, -0.562904, -0.429513, -0.426319,
        0.699138, -0.702929, -0.0921284, -0.0927832,
        0.604097, -0.603865, -0.367607, -0.367804,
        0.583421, 0.575885, -0.410211, 0.39963,
        0.000203964, 0.877453, 1.50806e-05, -0.479662,
        0.00990255, -0.711019, -0.0094022, -0.703041,
        0.0209384, -0.0065235, 0.999759, 0.000810188,
        0.6961, 0.71742, 0.0226831, -0.015484,
        0.220968, 0.221405, -0.671766, 0.671479,
        0.580725, 0.587138, 0.394501, -0.402985,
        0.679084, 0.693643, -0.163367, 0.176114,
        0.123094, 0.11632, -0.696965, 0.69682,
        0.491778, 0.490412, -0.508102, 0.509395,
        0.485033, 0.488052, -0.5108, 0.515395,
        4.83096e-05, 0.990002, -0.000118319, 0.141055,
        0.671745, 0.672651, -0.214099, 0.224635,
        0.2772, 0.273914, -0.649797, 0.652606,
        0.242571, -0.243661, -0.668325, -0.659644,
        0.00362373, 0.908659, 0.000934044, -0.417523,
        0.0566595, 0.000651729, -0.998329, 0.0113639};//same order
    
    vector<Eigen::Quaterniond> quatGSFinal;
    vector<Eigen::Quaterniond> quatMyFinal;
    for (int i=0; i < sizeof(quatGsTotal)/sizeof(double); i+=4)
    {
        Eigen::Quaterniond q_gs (quatGsTotal[i], quatGsTotal[i+1], quatGsTotal[i+2], quatGsTotal[i+3]);
        Eigen::Quaterniond q_my (quatMyTotal[i], quatMyTotal[i+1], quatMyTotal[i+2], quatMyTotal[i+3]);
        quatGSFinal.push_back(q_gs);
        quatMyFinal.push_back(q_my);
    }
    double orientation_error = orientationError(quatGSFinal, quatMyFinal);
    cout<<"The orientation error is: "<<orientation_error<<endl;
}
